#! /bin/csh -f
#-------------------------------------------------------------------------------
# Template to build scripts to create ASCII input files for GGLC, and to
# compile GGLC code into a library that can be used by CCSM.
#-------------------------------------------------------------------------------

if !(-d $CASEBUILD) mkdir $CASEBUILD

#-------------------------------------------------------------------------------
# setup
#-------------------------------------------------------------------------------

set GLC_GRID = "gland20"

set NX = $GLC_NX
set NY = $GLC_NY

set climatefile  = glint_example.LY.config
set gglcgridfile = $GLC_GRID.input.nc

# ---------------------------------------------------------------------------
#  Figure out the gridfile and paramfile
# ---------------------------------------------------------------------------

set gridfile  = UNSET
if ( $ATM_GRID =~ 48x96   )then
   set gridfile  = \$DIN_LOC_ROOT/glc/gglc/topodata_48x96_USGS_070110.glc.nc
endif
if ( $ATM_GRID =~ 0.9x1.25)then
   set gridfile  = \$DIN_LOC_ROOT/glc/gglc/topodata_0.9x1.25_USGS_070110.glc.nc
endif
if ( $ATM_GRID =~ 1.9x2.5 )then
   set gridfile  = \$DIN_LOC_ROOT/glc/gglc/fracdata/fracdata_1.9x2.5_gx1v6_c090206.glc.nc
endif

if ( $gridfile  == "UNSET" )then
   echo "ERROR: unsupported grid = $ATM_GRID"
   exit -1
endif

# ---------------------------------------------------------------------------
#  Figure out the paramfile
# ---------------------------------------------------------------------------

set paramfile = UNSET
if ( $GLC_GRID =~ gland20 )then
   set paramfile = $CODEROOT/glc/gglc/input_templates/ice.config.$GLC_GRID
endif

if ( $paramfile == "UNSET" ) then
   echo "ERROR: unsupported ice grid = $GLC_GRID"
   exit -1
endif

# ---------------------------------------------------------------------------
#  Create list of input files
# ---------------------------------------------------------------------------

cat >! $CASEBUILD/gglc.input_data_list << EOF
climatefile    = \$DIN_LOC_ROOT/glc/gglc/$climatefile
gridfile       = $gridfile
gglcgrid_input = \$DIN_LOC_ROOT/glc/gglc/$gglcgridfile
EOF

# ---------------------------------------------------------------------------
#  Create namelist build script
# ---------------------------------------------------------------------------
cat >! $CASEBUILD/gglc.buildnml.csh << EOF1
#! /bin/csh -f 
# ---------------------------------------------------------------------------
#  Create input text files to run GGLC
# ---------------------------------------------------------------------------

set exedir = \$RUNDIR; cd \$exedir
set gglcgrid_input = \$DIN_LOC_ROOT/glc/gglc/$gglcgridfile
set cism_history = \$CASE.cism.h

cp \$gglcgrid_input \$exedir/$gglcgridfile
chmod 644 \$exedir/$gglcgridfile

# Input namelists
cat >! gglc_in <<EOF
&files_nml
  climatefile = '\$DIN_LOC_ROOT/glc/gglc/$climatefile'
  paramfile   = 'ice.config'
/
&grid_nml
  horiz_grid_opt  = 'file'
  horiz_grid_file = '$gridfile'
  mask_varname    = 'LANDMASK'
  frac_varname    = 'LANDFRAC'
/
&time_manager_nml
  runid             = '\$CASE'
  dt_option         = 'steps_per_day'
  dt_count          = 1
  allow_leapyear    = .false.
  iyear0            = 1
  imonth0           = 1
  iday0             = 1
  ihour0            = 0
  iminute0          = 0
  isecond0          = 0
  date_separator    = '-'
  stop_option       = 'never'
/
EOF

# Input configuration file
cat >! ice.config <<EOF
EOF1
# Bring a copy of the ice.config file that the user can edit for their case
cat $paramfile >> $CASEBUILD/gglc.buildnml.csh
cat            >> $CASEBUILD/gglc.buildnml.csh << EOF1
EOF

# Input text file with grid/decomposition information
cat >! gglcx_in << EOF
$NX       !  i-direction global dimension
$NY       !  j-direction global dimension
2         !  decomp_type  1=1d-by-lat, 2=1d-by-lon, 3=2d, 4=2d evensquare, 11=segmented
0         !  num of pes for i (type 3 only)
0         !  length of segments (type 4 only)
EOF

EOF1

# ---------------------------------------------------------------------------
#  Create script to build GGLC model
# ---------------------------------------------------------------------------

cat >! $CASEBUILD/gglc.buildexe.csh << EOF2
#! /bin/csh -f 
# ---------------------------------------------------------------------------
#  Create script to build GGLC model
# ---------------------------------------------------------------------------

set objdir = \$OBJROOT/glc/obj; cd \$objdir

#------------------------------------------------------------------------------
# Build the library
#------------------------------------------------------------------------------
cat >! Filepath << EOF
\$CASEROOT/SourceMods/src.gglc
\$CODEROOT/glc/gglc/source_glc
\$CODEROOT/glc/gglc/source_glimmer
\$CODEROOT/glc/gglc/mpi
EOF

gmake complib -j \$GMAKE_J MODEL=gglc COMPLIB=\$LIBROOT/libglc.a -f \$CASETOOLS/Makefile MACFILE=\$CASEROOT/Macros.\$MACH || exit 2

EOF2
